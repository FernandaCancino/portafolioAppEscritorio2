/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.crudRubro;

import conectorBD.JavaConnectDb;
import controller.Renders;
import controller.descuento.CrudDescuento;
import controller.rubro.CrudRubro;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import model.LoginUser;
import view.menuPrincipal;
import model.Rubro.Rubro;
import model.TablaImagen;
import model.descuento.Descuento;
import view.crudDescuento.readDescuento;

/**
 *
 * @author fernandacancinoreyes
 */
public class readRubro extends javax.swing.JFrame {
  LoginUser mod;
    
    /**
     * Creates new form readRubro
     */
    public readRubro() throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        initComponents();
        
        /*Para dejar la pantalla centrada*/
        this.setLocationRelativeTo(null);
        
        //Agregar el btan a la tabla
        tblRubro.setDefaultRenderer(Object.class, new Renders());
        
        propiedadesTabla();
        
        mostrarRubro();
        
        //este codigo sirve para que al momento de elegir la crapeta la interface se vea bonita
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        
    }
    
    /*utilizamos la clase de jtable*/
    DefaultTableModel tablaRubro = new DefaultTableModel(){
            public boolean isCellEditable(int row, int column){
                return false;
            }  
    }; //le agregamos el isCellEditable y lo retornamos falso para que nos epueda editar 
    
    JButton btn_modificar = new JButton("Modificar");
    JButton btn_eliminar = new JButton("Eliminar");
    
    /*llamo a la clase que contiene la conexion*/
    JavaConnectDb obj = new JavaConnectDb();

    public readRubro(LoginUser mod) throws ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException {
        this.mod=mod;
        initComponents();
        
        /*Para dejar la pantalla centrada*/
        this.setLocationRelativeTo(null);
        
        //Agregar el btan a la tabla
        tblRubro.setDefaultRenderer(Object.class, new Renders());
        
        propiedadesTabla();
        
        mostrarRubro();
        
        //este codigo sirve para que al momento de elegir la crapeta la interface se vea bonita
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        
    }
    
    public void propiedadesTabla() {
        
        tablaRubro.addColumn("Id");
        tablaRubro.addColumn("Nombre Rubro");
        tablaRubro.addColumn("Categoria");
        tablaRubro.addColumn(""); //Modificar
        tablaRubro.addColumn(""); //Eliminar
        
        //JButton btn_modificar = new JButton("Modificar");
        btn_modificar.setName("m");
        //JButton btn_eliminar = new JButton("Eliminar");
        btn_eliminar.setName("e");
        
        //modificar el ancho
        tblRubro.setRowHeight(40);
        
    }
    
    
    /*se crea funcion para mostrar  los productos en la tabla*/
    public  void mostrarRubro(){
        
        try {
            Connection cn = obj.ConnectBd();
            Statement st = cn.createStatement();
            String sql = "SELECT IDRUBRO\n" +
                         "      ,NOMBRERUBRO\n" +
                         "      ,IDCATEGORIA\n" +
                         "FROM RUBRO";
            ResultSet rs = st.executeQuery(sql);
            
            Object datos[] = new Object[40];/* A la cantidad objetos le puse 40
            por que soy rudo antes era String pero lo cambie a
            Object para que admitiera la imagen*/
            
            while (rs.next()) {     
                
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                
                datos[3] = btn_modificar;
                datos[4] = btn_eliminar;
                
                tablaRubro.addRow(datos);   
                
            }
            tblRubro.setModel(tablaRubro);
            
        } catch (SQLException ex) {
            System.out.println(ex);
        }
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRubro = new javax.swing.JTable();
        btnAgregarRubro = new javax.swing.JButton();
        btnMenuPrincipalRubro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(208, 211, 212));
        jPanel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Tiendas Retail Mis Ofertas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Mantenedor de Rubro");

        tblRubro.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblRubro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblRubro.setColumnSelectionAllowed(true);
        tblRubro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRubroMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRubro);
        tblRubro.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        btnAgregarRubro.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnAgregarRubro.setText("Agregar Rubro");
        btnAgregarRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarRubroActionPerformed(evt);
            }
        });

        btnMenuPrincipalRubro.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        btnMenuPrincipalRubro.setText("Menu Principal");
        btnMenuPrincipalRubro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuPrincipalRubroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(451, 451, 451)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnMenuPrincipalRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnAgregarRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnAgregarRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnMenuPrincipalRubro, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblRubroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRubroMouseClicked
        // TODO add your handling code here:
        int clic_tabla = 0;

        //si clickea la tabla
        clic_tabla = this.tblRubro.rowAtPoint(evt.getPoint());
        //enviamos los datos de la tabla a las variables
        String id               = ""+tblRubro.getValueAt(clic_tabla, 0);
        String nombreRubro          = ""+tblRubro.getValueAt(clic_tabla, 1);
        String idCategoria  = ""+tblRubro.getValueAt(clic_tabla, 2);

        Rubro rub = new Rubro();

        int column = tblRubro.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY()/tblRubro.getRowHeight();

        if(row < tblRubro.getRowCount() && row >= 0
            && column < tblRubro.getColumnCount() && column >= 0){

            Object value = tblRubro.getValueAt(row, column);

            //ahora si apreta el botoncito de la tabla...
            if(value instanceof JButton){

                ((JButton)value).doClick();
                JButton boton = (JButton) value;

                if(boton.getName().equals("m")){
                    System.out.println("Click en el boton modificar");
                    //EVENTOS MODIFICAR
                    //Enviar de un Jpanel a otro
                    //jPanel.setSelectedIndex(1);

                    this.setVisible(false);
                    
                    updateRubro ud = null;
                    try {
                        ud = new updateRubro();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedLookAndFeelException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    ud.setVisible(true);

                    /*ENVIAR DATOS A LA VENTANA*/

                    updateRubro.txtNombreRubroMod.setText(nombreRubro);
                    updateRubro.cbxCategoriaRubroMod.setSelectedItem(idCategoria);
                    updateRubro.txtIdRubroMod.setText(id);

                    /***************************/

                    ud.pack();

                }
                if(boton.getName().equals("e")){

                    System.out.println("Click en el boton eliminar");

                    int s = JOptionPane.showConfirmDialog(null, "Eliminar Rubro","Si/no",JOptionPane.YES_NO_OPTION);

                    if(s == 0){
                    }

                    try {
                        //EVENTOS ELIMINAR
                        eliminar (id);
                    } catch (SQLException ex){
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InstantiationException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IllegalAccessException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (UnsupportedLookAndFeelException ex) {
                        Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }

    }//GEN-LAST:event_tblRubroMouseClicked

    public void eliminar(String id) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException, UnsupportedLookAndFeelException{
        
         CrudRubro cRubro= new CrudRubro();
          //Usuario usu = new Usuario();
          Rubro rub = new Rubro();
          
          rub.setIdrubro(Integer.parseInt(id));
        
        cRubro.eliminarRubro(rub);
        //re Actualizamos la pagina para que se vizualice el campo eliminado
         this.setVisible(false);
        readRubro rp = new readRubro();
        rp.setVisible(true);
        rp.pack();
    }
    
    
    private void btnAgregarRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarRubroActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        createRubro cd = null;
        try {
            cd = new createRubro(mod);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
        }
        cd.setVisible(true);
        cd.pack();
    }//GEN-LAST:event_btnAgregarRubroActionPerformed

    private void btnMenuPrincipalRubroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuPrincipalRubroActionPerformed
        // TODO add your handling code here:
        menuPrincipal mp = null;
        
            mp = new menuPrincipal(mod);
        
        this.setVisible(false);
        mp.setVisible(true);
        mp.pack();
    }//GEN-LAST:event_btnMenuPrincipalRubroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(readRubro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(readRubro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(readRubro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(readRubro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new readRubro().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(readRubro.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarRubro;
    private javax.swing.JButton btnMenuPrincipalRubro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRubro;
    // End of variables declaration//GEN-END:variables
}
